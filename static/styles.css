body {
  background-color: #121212;
  color: #ddd;
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
}

nav ul {
  list-style: none;
  display: flex;
  gap: 1rem;
  background: #222;
  padding: 1rem;
  justify-content: center; /* center nav items */
  margin: 0;
}

nav ul li a {
  color: #aaa;
  text-decoration: none;
  padding: 0.5rem 1rem;
  border-radius: 10px;
  transition: background-color 0.3s ease;
}

nav ul li a.active,
nav ul li a:hover {
  color: #3168ff;
  font-weight: bold;
  background-color: #333;
}

main {
  display: flex;
  justify-content: center;
  padding: 2rem 1rem;
}

.container {
  background-color: #1e1e1e;
  border-radius: 20px;
  padding: 2rem;
  max-width: 100%;
  width: 100%;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.6);
  box-sizing: border-box;
}

button {
  background-color: #3168ff;
  border: none;
  color: black;
  padding: 0.5rem 1rem;
  cursor: pointer;
  font-weight: bold;
  border-radius: 10px; /* rounded rectangle buttons */
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #254dbf; /* slightly darker on hover */
}

input, label {
  color: #ddd;
  display: block;
  font-weight: normal;
}

input {
  background: #222;
  border: 1px solid #444;
  padding: 0.3rem;
  margin: 0.3rem 0 0.8rem 0;
  color: white;
  border-radius: 6px;
  width: 100%;
  box-sizing: border-box;
}

pre {
  background: #222;
  padding: 1rem;
  white-space: pre-wrap;
  border-radius: 10px;
  overflow-x: auto;
}

img {
  margin-top: 1rem;
  max-width: 100%;
  border-radius: 10px;
  display: block;
}
/* First, let's target the parent container for the radio buttons */
.radio-block {
  display: flex;             /* Use Flexbox to align items on one line */
  align-items: center;       /* Vertically center the button and text */
  margin-bottom: 1rem;       /* Add some space between each option */
}

/* We need to hide the <br/> tag to force the label and input onto the same line */
.radio-block br {
  display: none;
}

/* Now, style the radio button itself */
.radio-block input[type="radio"] {
  /* We will create a custom button, so we need to hide the default one */
  position: absolute;        /* Take it out of the normal flow */
  opacity: 0;                /* Make it completely transparent */
  pointer-events: none; 
     
}

/* Style the label to look clickable and contain our custom button */
.radio-block label {
  position: relative;         /* Needed for positioning the pseudo-element */
  padding-left: 2.5rem;       /* Make space for the custom button */
  cursor: pointer;            /* Indicate it's clickable */
  font-size: 1.2rem;          /* Make the text bigger */
  font-weight: bold;          /* Keep the bold weight */
  color: #ddd;                /* Ensure text color is consistent */
}

/* Create the custom button using the label's ::before pseudo-element */
.radio-block label::before {
  content: '';                /* Essential for pseudo-elements */
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 1rem;              /* The size of the button */
  height: 1rem;
  border-radius: 0;         /* Make it a square */
  background-color: #444;     /* Unselected color */
  border: 2px solid #555;     /* Border for definition */
  transition: all 0.2s ease;  /* Smooth transition for hover/active states */
}

/* Style the active state when the radio button is checked */
/* The `+` selector targets the sibling `label` right after the checked `input` */
.radio-block input[type="radio"]:checked + label::before {
  background-color: #3168ff;  /* Your accent color for the active state */
  border-color: #3168ff;
  box-shadow: 0 0 5px rgba(49, 104, 255, 0.6); /* Add a glow */
}

.radio-block input[type="radio"]:checked + label {
  color: #fff;                /* Change text color for the active option */
}
